@mixin before-test-unit {
  $_PSTQ_: map-merge($_PSTQ_, ("BROWSER_DEFAULT_FONT_SIZE": 16px)) !global;
}

@include before-test-unit;

@include test-module("p-convert-length [function]") {
  @include test("Should return a relative value to default font-size.") {
    $length: 3px;
    $output: p-convert-length($length, "rem");
    $expect: 0.1875rem;

    @include assert-equal($output, $expect);
  }

  @include test("Should return a relative value to new `$from` assigned value.") {
    $length: 5px;
    $output: p-convert-length($length, "em", 8px);
    $expect: 0.625em;

    @include assert-equal($output, $expect);
  }
}

@include test-module("_p-px-rem [function]") {
  @include test("Should return a map of converted values.") {
    $value: 13px;
    $output: _p-px-rem($value);
    $expect: ("px": 13px, "rem": 0.8125rem);

    @include assert-equal($output, $expect);
  }

  @include test("Should return a map of converted values and round pixel value.") {
    $value: 34.55px;
    $output: _p-px-rem($value);
    $expect: ("px": 35px, "rem": 2.159375rem);

    @include assert-equal($output, $expect);
  }
}

@include test-module("p-px-rem [function]") {
  @include test("Should return a map of px/rem versions of a list.") {
    $value: (21px, 2.125rem);
    $output: p-px-rem($value);
    $expect: ("px": (21px, 34px), "rem": (1.3125rem, 2.125rem));

    @include assert-equal($output, $expect);
  }

  @include test("Should return a map of px/rem versions of a nested lists.") {
    $value: ((21px, 2.125rem), 55px);
    $output: p-px-rem($value);
    $expect: ("px": ((21px, 34px), 55px), "rem": ((1.3125rem, 2.125rem), 3.4375rem));

    @include assert-equal($output, $expect);
  }
}

@include test-module("_p-rem [mixin]") {
  @include test("Should output style rule containing rem values w/ px fallback.") {
    @include assert {
      $p-unit-global: "px" !global;

      @include output {
        @include _p-rem("line-height", 32px);
      }

      @include expect {
        //noinspection CssOverwrittenProperties
        line-height: 32px;
        //noinspection CssOverwrittenProperties
        line-height: 2rem;
      }
    }
  }

  @include test("Should output style rule containing rem values.") {
    @include assert {
      $p-unit-global: "rem" !global;

      @include output {
        @include _p-rem("font-size", 16px);
      }

      @include expect {
        font-size: 1rem;
      }
    }
  }
}
