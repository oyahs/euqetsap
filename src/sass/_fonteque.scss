//
// pasteque
// 0.0.3
// Beautify typography. Pasteque is a fork from Compass/typography.
// Zaza Agency <hi@zaza.africa> (zaza.africa)
//
// This work is licensed under the Creative Commons
// Attribution 4.0 International License. To view a copy
// of this license, visit http://creativecommons.org/licenses/by/4.0/.
//

////
//// @author shayo/pasteque
////

/// Fonts.
/// @access private
/// @type Map
$p-fonteque: () !global;

/// Font setter.
/// @example
///   @include p-fonteque-set("heading", ("family": ("Open Sans", sans-serif), "cap-height": 0.72));
/// @link https://www.sitepoint.com/dealing-constants-sass/
/// @output Ã¸
/// @parameter {String} $key - Font's key to set.
/// @parameter {Map} $spec - Font spec map.
@mixin p-fonteque-set($key, $spec) {
  @if (map-has-key($p-fonteque, $key)) {
    @error "`#{$key}`'s family already defined!";
  }

  @if (type-of($spec) != "map") {
    @error "`#{$key}`'s family $spec must be a map.";
  }

  @if (not map-has-key($spec, "cap-height")) {
    @error "`#{$key}`'s family $spec must have a correct (unitless number) `cap-height` value.";
  }

  $cap-height: map-get($spec, "cap-height");

  @if (type-of($cap-height) != "number") or (not unitless($cap-height)) or ($cap-height > 1) {
    @error "`#{$key}`'s family $spec must have a correct (unitless number) `cap-height` value.";
  }

  $p-fonteque: map-merge($p-fonteque, (quote($key): $spec)) !global;
}

/// Font getter.
/// @example
///   @include p-fonteque-get("heading");
/// @example
///   @include p-fonteque-get("if-it-does-not-exist", ("family": sans-serif));
/// @parameter {String} $key - Font's key to get.
/// @parameter {Map|Null} $spec [null] - Fallback font spec.
@mixin p-fonteque-get($key, $spec: null) {
  @if (type-of($spec) != "map") {
    $spec: ();
  }

  @if (map-has-key($p-fonteque, $key)) {
    $spec: map-merge($spec, map-get($p-fonteque, $key));
  }

  @each $property, $value in $spec {
    @if (index(("family", "style", "weight"), $property) != null) {
      #{unquote("font-#{$property}")}: if(($property != "family") and (type-of($value) == "string"), unquote($value), $value);
    }
  }
}
